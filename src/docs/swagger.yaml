basePath: /api/v1/
definitions:
  dtos.AppLogDto:
    properties:
      actionID:
        type: string
      createdAt:
        description: CreatedAt - entity create time
        type: string
      id:
        description: ID - unique identifier
        type: string
      level:
        description: Level - level of the log
        type: string
      message:
        description: Message - log message
        type: string
      source:
        description: Source - method from which the log was obtained
        type: string
      updatedAt:
        description: UpdatedAt - entity update time
        type: string
    type: object
  dtos.DtoType:
    type: object
  dtos.EthernetSwitchCreateDto:
    properties:
      address:
        description: Address - switch ip address
        type: string
      name:
        description: Name - switch name
        type: string
      password:
        description: Password - ethernet switch management password
        type: string
      serial:
        description: Serial - switch serial number
        type: string
      switchModel:
        description: SwitchModel - switch model
        type: string
      username:
        description: Username - switch admin username
        type: string
    type: object
  dtos.EthernetSwitchDto:
    properties:
      address:
        description: Address - switch ip address
        type: string
      createdAt:
        description: CreatedAt - entity create time
        type: string
      id:
        description: ID - unique identifier
        type: string
      name:
        description: Name - switch name
        type: string
      serial:
        description: Serial - switch serial number
        type: string
      switchModel:
        description: SwitchModel - switch model
        type: string
      updatedAt:
        description: UpdatedAt - entity update time
        type: string
      username:
        description: Username - switch admin username
        type: string
    type: object
  dtos.EthernetSwitchModelDto:
    properties:
      code:
        description: Code - unique switch model code
        type: string
      manufacturer:
        description: Manufacturer - Switch model manufacturer
        type: string
      model:
        description: Series - Switch model
        type: string
    type: object
  dtos.EthernetSwitchPortCreateDto:
    properties:
      name:
        description: Name for this port
        type: string
      poetype:
        description: |-
          POEType type of PoE for this port
          can be: "poe", "poe+", "passive24", "none"
        type: string
    type: object
  dtos.EthernetSwitchPortDto:
    properties:
      createdAt:
        description: CreatedAt - entity create time
        type: string
      id:
        description: ID - unique identifier
        type: string
      name:
        description: Name for this port
        type: string
      poetype:
        description: |-
          POEType type of PoE for this port
          can be: "poe", "poe+", "passive24", "none"
        type: string
      updatedAt:
        description: UpdatedAt - entity update time
        type: string
    type: object
  dtos.EthernetSwitchPortUpdateDto:
    properties:
      name:
        description: Name for this port
        type: string
      poetype:
        description: |-
          POEType type of PoE for this port
          can be: "poe", "poe+", "passive24", "none"
        type: string
    type: object
  dtos.EthernetSwitchUpdateDto:
    properties:
      address:
        description: Address - switch ip address
        type: string
      name:
        description: Name - switch name
        type: string
      password:
        description: Password - ethernet switch management password
        type: string
      serial:
        description: Serial - switch serial number
        type: string
      switchModel:
        description: SwitchModel - switch model
        type: string
      username:
        description: Username - switch admin username
        type: string
    type: object
  dtos.HTTPLogDto:
    properties:
      clientIP:
        description: ClientIP - client IP address
        type: string
      createdAt:
        description: CreatedAt - entity create time
        type: string
      customRequestHeaders:
        description: CustomRequestHeaders - custom headers of the request
        type: string
      domain:
        description: Domain - domain that processed the request
        type: string
      httpmethod:
        description: HTTPMethod - http method
        type: string
      id:
        description: ID - unique identifier
        type: string
      latency:
        description: Latency - latency in milliseconds
        type: integer
      queryParams:
        description: QueryParams - query params passed
        type: string
      relativePath:
        description: RelativePath - path to the endpoint
        type: string
      requestBody:
        description: RequestBody - body of the request
        type: string
      requestHeaders:
        description: RequestHeaders - headers of the request
        type: string
      responseBody:
        description: ResponseBody - body of the response
        type: string
      updatedAt:
        description: UpdatedAt - entity update time
        type: string
    type: object
  dtos.PaginatedListDto:
    properties:
      items:
        description: Items - array of DTO items
        items:
          $ref: '#/definitions/dtos.DtoType'
        type: array
      page:
        description: Page - page number
        type: integer
      size:
        description: Size - page size
        type: integer
      total:
        description: Total - total number of items
        type: integer
    type: object
  dtos.ResponseDataDto:
    properties:
      data:
        description: Data - any data to send
      status:
        $ref: '#/definitions/dtos.ResponseStatusDto'
        description: Status - response status structure
    type: object
  dtos.ResponseDto:
    properties:
      status:
        $ref: '#/definitions/dtos.ResponseStatusDto'
        description: Status - response status structure
    type: object
  dtos.ResponseStatusDto:
    properties:
      code:
        description: Code - 0 if OK, otherwise 1
        type: integer
      message:
        description: Message - response message
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API supporter
    url: http://www.swagger.io/support
  description: Description of specifications
  license:
    name: license(Mandatory)
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rack of labs API
  version: version(1.0)
paths:
  /ethernet-switch/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order by field
        in: path
        name: orderBy
        type: string
      - description: '''asc'' or ''desc'' for ascending or descending order'
        in: path
        name: orderDirection
        type: string
      - description: searchable value in entity
        in: path
        name: search
        type: string
      - description: page number
        in: path
        name: page
        type: integer
      - description: number of entities per page
        in: path
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dtos.PaginatedListDto'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/dtos.EthernetSwitchDto'
                        type: array
                    type: object
              type: object
      summary: Gets paginated list of switches
      tags:
      - ethernet-switch
    post:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch fields
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EthernetSwitchCreateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  type: string
              type: object
      summary: Creates new ethernet switch
      tags:
      - ethernet-switch
  /ethernet-switch/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDto'
      summary: Delete ethernet switch by id
      tags:
      - ethernet-switch
    get:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  $ref: '#/definitions/dtos.EthernetSwitchDto'
              type: object
      summary: Gets ethernet switch by id
      tags:
      - ethernet-switch
    put:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch fields
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EthernetSwitchUpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDto'
      summary: Updates ethernet switch by id
      tags:
      - ethernet-switch
  /ethernet-switch/{id}/port/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      - description: Order by field
        in: path
        name: orderBy
        type: string
      - description: '''asc'' or ''desc'' for ascending or descending order'
        in: path
        name: orderDirection
        type: string
      - description: Searchable value in entity
        in: path
        name: search
        type: string
      - description: Page number
        in: path
        name: page
        type: integer
      - description: Number of entities per page
        in: path
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dtos.PaginatedListDto'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/dtos.EthernetSwitchPortDto'
                        type: array
                    type: object
              type: object
      summary: Gets paginated list of ethernet switch ports
      tags:
      - ethernet-switch
    post:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      - description: Ethernet switch port fields
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EthernetSwitchPortCreateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  type: string
              type: object
      summary: Creates new ethernet switch port
      tags:
      - ethernet-switch
  /ethernet-switch/{id}/port/{portID}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      - description: Ethernet switch port ID
        in: path
        name: portID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDto'
      summary: Delete ethernet switch port by id
      tags:
      - ethernet-switch
    get:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      - description: Ethernet switch port ID
        in: path
        name: portID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  $ref: '#/definitions/dtos.EthernetSwitchPortDto'
              type: object
      summary: Gets ethernet switch port by id
      tags:
      - ethernet-switch
    put:
      consumes:
      - application/json
      parameters:
      - description: Ethernet switch ID
        in: path
        name: id
        required: true
        type: string
      - description: Ethernet switch port ID
        in: path
        name: portID
        required: true
        type: string
      - description: Ethernet switch port fields
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.EthernetSwitchPortUpdateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.ResponseDto'
      summary: Updates ethernet switch port by id
      tags:
      - ethernet-switch
  /ethernet-switch/models:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.EthernetSwitchModelDto'
            type: array
      summary: Get ethernet switch supported models
      tags:
      - ethernet-switch
  /log/app/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order by field
        in: path
        name: orderBy
        type: string
      - description: '''asc'' or ''desc'' for ascending or descending order'
        in: path
        name: orderDirection
        type: string
      - description: searchable value in entity
        in: path
        name: search
        type: string
      - description: page number
        in: path
        name: page
        type: integer
      - description: number of entities per page
        in: path
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dtos.PaginatedListDto'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/dtos.AppLogDto'
                        type: array
                    type: object
              type: object
      summary: Gets paginated list of app logs
      tags:
      - app log
  /log/app/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: log id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  $ref: '#/definitions/dtos.AppLogDto'
              type: object
      summary: Gets http app by id
      tags:
      - app log
  /log/http/:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order by field
        in: path
        name: orderBy
        type: string
      - description: '''asc'' or ''desc'' for ascending or descending order'
        in: path
        name: orderDirection
        type: string
      - description: searchable value in entity
        in: path
        name: search
        type: string
      - description: page number
        in: path
        name: page
        type: integer
      - description: number of entities per page
        in: path
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dtos.PaginatedListDto'
                  - properties:
                      items:
                        items:
                          $ref: '#/definitions/dtos.HTTPLogDto'
                        type: array
                    type: object
              type: object
      summary: Gets paginated list of http logs
      tags:
      - http log
  /log/http/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: log id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dtos.ResponseDataDto'
            - properties:
                data:
                  $ref: '#/definitions/dtos.HTTPLogDto'
              type: object
      summary: Gets http log by id
      tags:
      - http log
swagger: "2.0"
